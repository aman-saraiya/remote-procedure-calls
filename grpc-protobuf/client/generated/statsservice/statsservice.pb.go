//
// Service Definition for StatsService

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v3.14.0
// source: statsservice.proto

package statsservice

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request argument for GetStats RPC
type GetStatsArg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Numbers []float64 `protobuf:"fixed64,1,rep,packed,name=numbers,proto3" json:"numbers,omitempty"`
}

func (x *GetStatsArg) Reset() {
	*x = GetStatsArg{}
	mi := &file_statsservice_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStatsArg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatsArg) ProtoMessage() {}

func (x *GetStatsArg) ProtoReflect() protoreflect.Message {
	mi := &file_statsservice_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatsArg.ProtoReflect.Descriptor instead.
func (*GetStatsArg) Descriptor() ([]byte, []int) {
	return file_statsservice_proto_rawDescGZIP(), []int{0}
}

func (x *GetStatsArg) GetNumbers() []float64 {
	if x != nil {
		return x.Numbers
	}
	return nil
}

// Response returned by GetStats RPC
type GetStatsRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mean   float64 `protobuf:"fixed64,1,opt,name=mean,proto3" json:"mean,omitempty"`
	Median float64 `protobuf:"fixed64,2,opt,name=median,proto3" json:"median,omitempty"`
}

func (x *GetStatsRet) Reset() {
	*x = GetStatsRet{}
	mi := &file_statsservice_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStatsRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatsRet) ProtoMessage() {}

func (x *GetStatsRet) ProtoReflect() protoreflect.Message {
	mi := &file_statsservice_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatsRet.ProtoReflect.Descriptor instead.
func (*GetStatsRet) Descriptor() ([]byte, []int) {
	return file_statsservice_proto_rawDescGZIP(), []int{1}
}

func (x *GetStatsRet) GetMean() float64 {
	if x != nil {
		return x.Mean
	}
	return 0
}

func (x *GetStatsRet) GetMedian() float64 {
	if x != nil {
		return x.Median
	}
	return 0
}

// Request argument for RunningStats RPC.
// NOTE: RunningStats is a bi-directional streaming RPC.
// Multiple RunningStatsArg can be sent as part of a
// single RPC request. (Client Side Streaming)
type RunningStatsArg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A single number, sent during the bidirectional stream
	Number float64 `protobuf:"fixed64,1,opt,name=number,proto3" json:"number,omitempty"`
}

func (x *RunningStatsArg) Reset() {
	*x = RunningStatsArg{}
	mi := &file_statsservice_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunningStatsArg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunningStatsArg) ProtoMessage() {}

func (x *RunningStatsArg) ProtoReflect() protoreflect.Message {
	mi := &file_statsservice_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunningStatsArg.ProtoReflect.Descriptor instead.
func (*RunningStatsArg) Descriptor() ([]byte, []int) {
	return file_statsservice_proto_rawDescGZIP(), []int{2}
}

func (x *RunningStatsArg) GetNumber() float64 {
	if x != nil {
		return x.Number
	}
	return 0
}

// Response returned for RunningStats RPC
// Multiple RunningStatsRet could be returned by the
// server as part of a single RPC request. (Server Side Streaming)
type RunningStatsRet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Running mean of the numbers received so far
	Mean float64 `protobuf:"fixed64,1,opt,name=mean,proto3" json:"mean,omitempty"`
	// Running median of the numbers received so far
	Median float64 `protobuf:"fixed64,2,opt,name=median,proto3" json:"median,omitempty"`
}

func (x *RunningStatsRet) Reset() {
	*x = RunningStatsRet{}
	mi := &file_statsservice_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunningStatsRet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunningStatsRet) ProtoMessage() {}

func (x *RunningStatsRet) ProtoReflect() protoreflect.Message {
	mi := &file_statsservice_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunningStatsRet.ProtoReflect.Descriptor instead.
func (*RunningStatsRet) Descriptor() ([]byte, []int) {
	return file_statsservice_proto_rawDescGZIP(), []int{3}
}

func (x *RunningStatsRet) GetMean() float64 {
	if x != nil {
		return x.Mean
	}
	return 0
}

func (x *RunningStatsRet) GetMedian() float64 {
	if x != nil {
		return x.Median
	}
	return 0
}

var File_statsservice_proto protoreflect.FileDescriptor

var file_statsservice_proto_rawDesc = []byte{
	0x0a, 0x12, 0x73, 0x74, 0x61, 0x74, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x22, 0x27, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x41, 0x72,
	0x67, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x01, 0x52, 0x07, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x22, 0x39, 0x0a, 0x0b, 0x47,
	0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x65,
	0x61, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x6d, 0x65, 0x61, 0x6e, 0x12, 0x16,
	0x0a, 0x06, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06,
	0x6d, 0x65, 0x64, 0x69, 0x61, 0x6e, 0x22, 0x29, 0x0a, 0x0f, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e,
	0x67, 0x53, 0x74, 0x61, 0x74, 0x73, 0x41, 0x72, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x22, 0x3d, 0x0a, 0x0f, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x52, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x65, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x04, 0x6d, 0x65, 0x61, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x64, 0x69,
	0x61, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x6e,
	0x32, 0xa2, 0x01, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x74, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x40, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x19, 0x2e,
	0x73, 0x74, 0x61, 0x74, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x41, 0x72, 0x67, 0x1a, 0x19, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x73,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73,
	0x52, 0x65, 0x74, 0x12, 0x50, 0x0a, 0x0c, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x12, 0x1d, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x73, 0x41,
	0x72, 0x67, 0x1a, 0x1d, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65,
	0x74, 0x28, 0x01, 0x30, 0x01, 0x42, 0x18, 0x5a, 0x16, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x64, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_statsservice_proto_rawDescOnce sync.Once
	file_statsservice_proto_rawDescData = file_statsservice_proto_rawDesc
)

func file_statsservice_proto_rawDescGZIP() []byte {
	file_statsservice_proto_rawDescOnce.Do(func() {
		file_statsservice_proto_rawDescData = protoimpl.X.CompressGZIP(file_statsservice_proto_rawDescData)
	})
	return file_statsservice_proto_rawDescData
}

var file_statsservice_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_statsservice_proto_goTypes = []any{
	(*GetStatsArg)(nil),     // 0: statsservice.GetStatsArg
	(*GetStatsRet)(nil),     // 1: statsservice.GetStatsRet
	(*RunningStatsArg)(nil), // 2: statsservice.RunningStatsArg
	(*RunningStatsRet)(nil), // 3: statsservice.RunningStatsRet
}
var file_statsservice_proto_depIdxs = []int32{
	0, // 0: statsservice.StatsService.GetStats:input_type -> statsservice.GetStatsArg
	2, // 1: statsservice.StatsService.RunningStats:input_type -> statsservice.RunningStatsArg
	1, // 2: statsservice.StatsService.GetStats:output_type -> statsservice.GetStatsRet
	3, // 3: statsservice.StatsService.RunningStats:output_type -> statsservice.RunningStatsRet
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_statsservice_proto_init() }
func file_statsservice_proto_init() {
	if File_statsservice_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_statsservice_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_statsservice_proto_goTypes,
		DependencyIndexes: file_statsservice_proto_depIdxs,
		MessageInfos:      file_statsservice_proto_msgTypes,
	}.Build()
	File_statsservice_proto = out.File
	file_statsservice_proto_rawDesc = nil
	file_statsservice_proto_goTypes = nil
	file_statsservice_proto_depIdxs = nil
}
